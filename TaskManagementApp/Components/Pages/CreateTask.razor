@page "/createtask"
@using ClassLibraryModel
@using ClassLibraryDal
@using Microsoft.AspNetCore.Components
@using Microsoft.AspNetCore.Components.Forms
@inject IJSRuntime JSRuntime
@rendermode InteractiveServer

<h2>Add New Task</h2>

<EditForm Model="newTask" OnValidSubmit="HandleSubmit">
    <DataAnnotationsValidator />
    <ValidationSummary />

    <div class="form-group">
        <label for="TaskName">Task Name:</label>
        <InputText id="TaskName" @bind-Value="newTask.TaskName" class="form-control" />
    </div>

    <div class="form-group">
        <label for="TaskDescription">Task Description:</label>
        <InputTextArea id="TaskDescription" @bind-Value="newTask.TaskDescription" class="form-control description-box" />
    </div>
    <div class="form-group">
        <label for="DueDate">Due Date:</label>
        <InputDate id="DueDate" @bind-Value="newTask.DueDate" class="form-control" />
    </div>
    <div class="form-group">
        <label for="TaskPriority">Task Priority:</label>
        <InputSelect id="TaskPriority" @bind-Value="newTask.TaskPriority" class="form-control">
            <option value="">Set Priority</option>
            <option value="High">High</option>
            <option value="Medium">Medium</option>
            <option value="Low">Low</option>
        </InputSelect>
    </div>
    <div class="form-group">
        <label for="SpecialNote">Special Note:</label>
        <InputTextArea id="SpecialNote" @bind-Value="newTask.SpecialNote" class="form-control description-box" />
    </div>
    <div class="button-container">
        <button class="submit-button" type="submit">Create Task</button>
    </div>
</EditForm>

@code {
    private TaskModel newTask = new TaskModel();
    private async Task HandleSubmit()
    {
        if (string.IsNullOrEmpty(newTask.TaskName))
        {
            await JSRuntime.InvokeVoidAsync("alert", "Please enter complete details");
            return;
        }
        DalTask.AddTask(newTask);
        await JSRuntime.InvokeVoidAsync("alert", "Task added successfully");
        newTask = new TaskModel();
    }
}
